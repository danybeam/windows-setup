{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create new statefull watched widget": {
		"prefix": "statefullwatchedwidget",
		"body": [
			"class ${1:HomePage} extends StatefulWidget {",
			"  @override",
			"  ${2:_HomePageState} createState() => ${2:_HomePageState}();",
			"}",
			"",
			"class ${2:_HomePageState} extends State<${1:HomePage}> with WidgetsBindingObserver {",
			"",
			"  @override",
			"  void initState() {",
			"    super.initState();",
			"    WidgetsBinding.instance.addObserver(this);",
			"    $0",
			"  }",
			"",
			"  void initAsync() async {}",
			"",
			"  @override",
			"  void dispose() {",
			"    WidgetsBinding.instance.removeObserver(this);",
			"    super.dispose();",
			"  }",
			"",
			"  @override",
			"  void didChangeAppLifecycleState(AppLifecycleState state) async {",
			"    super.didChangeAppLifecycleState(state);",
			"    switch (state) {",
			"      case AppLifecycleState.paused:",
			"        print('paused state');",
			"        break;",
			"      case AppLifecycleState.resumed:",
			"        print('resumed state');",
			"        break;",
			"      case AppLifecycleState.inactive:",
			"        print('inactive state');",
			"        break;",
			"      case AppLifecycleState.detached:",
			"        print('detached state');",
			"        break;",
			"    }",
			"  }",
			"",
			"  @override",
			"  Widget build(BuildContext context) {",
			"    return null;",
			"  }",
			"}",
			""
		],
		"description": "Create new statefull watched widget"
	}
}